---
import LayoutEstudiante from "../layouts/LayoutEstudiante.astro";
import PerfilEstudiante from "../components/perfilEstudiante.astro";
---

<script>
	// Script para cargar datos del estudiante automáticamente
	document.addEventListener("DOMContentLoaded", async () => {
		// Obtener el código del estudiante (puedes obtenerlo de una cookie, localStorage o parámetro URL)
		// Por ejemplo, si lo tienes en localStorage:
		const codigoAlumno = localStorage.getItem("codigoAlumno") || "123456"; // Valor por defecto o desde donde lo almacenes

		// URL de tu API
		const apiUrl = `http://localhost:82/bolsaDeTrabajoApi/Controllers/estudianteController.php?idEstudiante=1005`;

		try {
			// Realizar la petición GET
			const response = await fetch(apiUrl, {
				method: "GET",
				headers: {
					Accept: "application/json",
				},
			});

			if (!response.ok) {
				throw new Error(`Error en la petición: ${response.status}`);
			}

			// Convertir la respuesta a JSON
			const data = await response.json();

			// Verificar si la respuesta contiene los datos necesarios
			if (data && data.message == "ok") {
				const estudiante = data.data[0]; // Asumiendo que la respuesta tiene este formato

				// Rellenar los campos en el perfil
				document.querySelector(".about-text p").textContent =
					estudiante.descripcion || "Sin descripción disponible";

				// Actualizar los datos personales
				const mediaElements = document.querySelectorAll(".media");

				// Mapeo de elementos para facilitar la actualización
				const camposAActualizar = [
					{ label: "Codigo Alumno", valor: estudiante.codigoAlumno },
					{ label: "Correo", valor: estudiante.correo },
					{ label: "Telefono", valor: estudiante.telefono },
					{ label: "Nombre", valor: estudiante.nombre },
					{
						label: "Apellidos",
						valor: `${estudiante.apellidoPaterno} ${estudiante.apellidoMaterno}`,
					},
					{
						label: "Curriculum",
						valor: estudiante.curriculum || "No disponible",
					},
				];

				// Iterar sobre los elementos media y actualizar los valores
				mediaElements.forEach((media) => {
					const labelElement = media.querySelector("label");
					if (labelElement) {
						const campo = camposAActualizar.find(
							(c) => labelElement.textContent === c.label,
						);
						if (campo) {
							const valorElement = media.querySelector("p");

							valorElement.textContent = campo.valor;
							if (valorElement) {
							}
						}
					}
				});

				// Actualizar la imagen de perfil si está disponible
				if (estudiante.imagenPerfil) {
					const avatarImg =
						document.querySelector(".about-avatar img");
					if (avatarImg) {
						avatarImg.src = estudiante.imagenPerfil;
						avatarImg.alt = `${estudiante.nombre} ${estudiante.apellidoPaterno}`;
					}
				}

				// Actualizar el título (puesto deseado)
				document.querySelector(".about-text h6.lead").textContent =
					estudiante.descripcion || "Sin Puesto deseado disponible";
				if (puestoDeseado && estudiante.puestoDeseado) {
					puestoDeseado.textContent = estudiante.puestoDeseado;
				}
			} else {
				console.error(
					"Formato de respuesta incorrecto o error en la respuesta",
					data,
				);
			}
		} catch (error) {
			console.error("Error al cargar los datos del estudiante:", error);
		}
	});
</script>
<LayoutEstudiante>
	<PerfilEstudiante />
</LayoutEstudiante>
